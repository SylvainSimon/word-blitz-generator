<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Controls.Maps.XamGeographicMap.v15.1</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Controls.Maps.SphericalMercatorHorizontalScaler">
            <summary>
            Scaler class used for maps with spherical mercator projections.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.SphericalMercatorHorizontalScaler.#ctor">
            <summary>
            SphericalMercatorHorizontalScaler constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.SphericalMercatorHorizontalScaler.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the unscaled axis value from an scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.SphericalMercatorHorizontalScaler.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the scaled viewport value from an unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The scaled viewport value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.SphericalMercatorHorizontalScaler.GetScaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.SphericalMercatorHorizontalScaler.CalculateRange(Infragistics.Controls.Charts.NumericAxisBase,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Calculates the range of this axis scaler based on the given parameters.
            </summary>
            <param name="target">The axis in context.</param>
            <param name="minimumValue">The application-defined axis minimum value, or NaN if the application has not specified an axis minimum.</param>
            <param name="maximumValue">The application-defined axis maximum value, or NaN if the application has not specified an axis maximum.</param>
            <param name="actualMinimumValue">The resulting axis scale minimum, determined by the CalculateRange function.</param>
            <param name="actualMaximumValue">The resulting axis scale maximum, determined by the CalculateRange function.</param>
        </member>
        <member name="T:Infragistics.Controls.Maps.SphericalMercatorVerticalScaler">
            <summary>
            Scaler class used for maps with spherical mercator projections.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.SphericalMercatorVerticalScaler.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the unscaled axis value from an scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.SphericalMercatorVerticalScaler.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the scaled viewport value from an unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The scaled viewport value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.SphericalMercatorVerticalScaler.GetScaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.SphericalMercatorVerticalScaler.CalculateRange(Infragistics.Controls.Charts.NumericAxisBase,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Calculates the range of this axis scaler based on the given parameters.
            </summary>
            <param name="target">The axis in context.</param>
            <param name="minimumValue">The application-defined axis minimum value, or NaN if the application has not specified an axis minimum.</param>
            <param name="maximumValue">The application-defined axis maximum value, or NaN if the application has not specified an axis maximum.</param>
            <param name="actualMinimumValue">The resulting axis scale minimum, determined by the CalculateRange function.</param>
            <param name="actualMaximumValue">The resulting axis scale maximum, determined by the CalculateRange function.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.SphericalMercatorVerticalScaler.OnPropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Called when a property value changes.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.SphericalMercatorVerticalScaler.#ctor">
            <summary>
            SphericalMercatorVerticalScaler constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.SphericalMercatorVerticalScaler.GetProjectedValue(System.Double)">
            <summary>
            Returns the given value projected as latitude.
            </summary>
            <param name="value">The value to project.</param>
            <returns>The given value, projected as latitude.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.SphericalMercatorVerticalScaler.GetUnprojectedValue(System.Double)">
            <summary>
            Returns the given value unprojected from a latitude value.
            </summary>
            <param name="value">The latitude to unproject.</param>
            <returns>The given value, unprojected from a latitude value.</returns>
        </member>
        <member name="P:Infragistics.Controls.Maps.SphericalMercatorVerticalScaler.MaximumValue">
            <summary>
            The scale's maximum value.
            </summary>
            <remarks>
            This is a constant value of 85.05112878.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Maps.SphericalMercatorVerticalScaler.MinimumValue">
            <summary>
            The scale's minimum value.
            </summary>
            <remarks>
            This is a constant value of -85.05112878.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.ColorCollectionConverter">
            <summary>
            TypeConverter class used for converting space-delimited lists of strings to ColorCollections.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColorCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">A Type that represents the type you want to convert from.</param>
            <returns>True if this converter can perform the conversion; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColorCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColorCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="destinationType">A Type that represents the type you want to convert to.</param>
            <returns>True if this converter can perform the conversion; otherwise, False.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.ColorScale">
            <summary>
            Base class for classes which provide colors corresponding to numeric values within a known list of numeric values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColorScale.GetColor(System.Double,System.Double,System.Double,System.Collections.Generic.IList{System.Double})">
            <summary>
            Return a color corresponding to the given numeric value.
            </summary>
            <param name="value">The numeric value to get a color for.</param>
            <param name="defaultMinimum">The minumum value of the value column.</param>
            <param name="defaultMaximum">The maximum value of the value column.</param>
            <param name="valueColumn">The list of all numeric values in the scale.</param>
            <returns>A color corresponding to the given numeric value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColorScale.PropertyUpdated(System.String,System.Object,System.Object)">
            <summary>
            Invoked whenever a property value on this ColorScale is updated.
            </summary>
            <param name="propertyName">The name of the property which was updated.</param>
            <param name="oldValue">The previous value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ColorScaleInterpolationMode">
            <summary>
            Describes available modes of interpolation on a color scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ColorScaleInterpolationMode.Select">
            <summary>
            Select one of the colors in the palette.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ColorScaleInterpolationMode.InterpolateRGB">
            <summary>
            Interpolate between colors in the palette using RGB interpolation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ColorScaleInterpolationMode.InterpolateHSV">
            <summary>
            Interpolate between colors in the palette using HSV interpolation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CustomPaletteColorScale">
            <summary>
            ColorScale class for selecting a color from a given palette, or interpolating between adjacent colors in that palette.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomPaletteColorScale.#ctor">
            <summary>
            CustomPaletteColorScale constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CustomPaletteColorScale.MinimumValueProperty">
            <summary>
            Identifies the MinimumValue dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CustomPaletteColorScale.MaximumValueProperty">
            <summary>
            Identifies the MaximumValue dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomPaletteColorScale.PropertyUpdated(System.String,System.Object,System.Object)">
            <summary>
            Invoked whenever a property value on this ColorScale is updated.
            </summary>
            <param name="propertyName">The name of the property which was updated.</param>
            <param name="oldValue">The previous value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomPaletteColorScale.GetColor(System.Double,System.Double,System.Double,System.Collections.Generic.IList{System.Double})">
            <summary>
            Return a color corresponding to the given numeric value.
            </summary>
            <param name="value">The numeric value to get a color for.</param>
            <param name="defaultMinimum">The default value for minimum, if no minimum setting is present on this color scale.</param>
            <param name="defaultMaximum">The default value for maximum, if no maximum setting is present on this color scale.</param>
            <param name="valueColumn">The list of all numeric values in the scale.</param>
            <returns>A color corresponding to the given numeric value.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.CustomPaletteColorScale.InterpolationModeProperty">
            <summary>
            Identifies the InterpolationMode dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CustomPaletteColorScale.MinimumValue">
            <summary>
            The lowest value to assign a color.  Any given value less than this value will be made Transparent.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CustomPaletteColorScale.MaximumValue">
            <summary>
            The highest value to assign a color.  Any given value greater than this value will be made Transparent.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CustomPaletteColorScale.Palette">
            <summary>
            A list of colors to select from or interpolate between.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CustomPaletteColorScale.InterpolationMode">
            <summary>
            The approach to use when getting a color from the palette.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.ArcGISOnlineMapImagery">
            <summary>
            
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.GeographicMapImagery">
            <summary>
            Control class used for displaying multi-scale TileSource imagery.  Designed to be used for background imagery in the XamGeographicMap.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapImagery.#ctor(Infragistics.Controls.Maps.XamMultiScaleTileSource)">
            <summary>
            GeographicMapImagery constructor.
            </summary>
            <param name="tileSource">The TileSource which will provide the imagery.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapImagery.OnViewCreated(Infragistics.Controls.Maps.GeographicMapImageryView)">
            <summary>
            Method called after the View has been created for this GeographicMapImagery.
            </summary>
            <param name="view">The View which was just created.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapImagery.CreateView">
            <summary>
            Method called to create the View for this GeographicMapImagery.
            </summary>
            <returns>The newly created GeographicMapImageryView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapImagery.OnApplyTemplate">
            <summary>
            Method invoked whenever application code or internal processes call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapImagery.OnPropertyUpdated(System.String,System.Object,System.Object)">
            <summary>
            Method invoked whenever a property value is changed.
            </summary>
            <param name="propertyName">The name of the changed property.</param>
            <param name="oldValue">The previous value of the changed property.</param>
            <param name="newValue">The new value of the changed property.</param>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicMapImagery.WindowRectProperty">
            <summary>
            Identifies the WindowRect dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicMapImagery.GeographicMapProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.GeographicMapImagery.GeographicMap"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapImagery.OnGeographicMapChanged(Infragistics.Controls.Maps.XamGeographicMap,Infragistics.Controls.Maps.XamGeographicMap)">
            <summary>
            GeographicMapProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapImagery.ClearTileCache">
            <summary>
            Removes all cached tile Imagery from the 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapImagery.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapImagery.Refresh(System.Windows.Size)">
            <summary>
            Refreshes the view.
            </summary>
            <param name="finalSize">The total space available for GeographicMapImagery graphics.</param>
            <returns>The total space used by GeographicMapImagery graphics.</returns>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicMapImagery.View">
            <summary>
            The View for this GeographicMapImagery.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicMapImagery.DeferralHandler">
            <summary>
            The deferral handler to use for deferred refreshes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicMapImagery.WindowRect">
            <summary>
            A rectangle representing the portion of the map imagery currently in view.
            </summary>
            <remarks>
            A rectangle at X=0, Y=0 with a Height and Width of 1 implies the entire plotting area is in view.  A Height and Width of .5 would imply that the view is halfway zoomed in.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicMapImagery.GeographicMap">
            <summary>
            The XamGeographicMap which is hosting this GeographicMapImagery control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicMapImagery.TileSource">
            <summary>
            The TileSource of background images.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Maps.GeographicMapImagery.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.MapServerUriProperty">
            <summary>
            Identifies the MapServerUri property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.UserNameProperty">
            <summary>
            Identifies the UserName property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.PasswordProperty">
            <summary>
            Identifies the Password property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.UserTokenProperty">
            <summary>
            Identifies the UserToken property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.IsMapPublicProperty">
            <summary>
            Identifies the IsMapPublic property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.AcquireNewToken">
            <summary>
            Retreives a new token based on the preconfigured parameters and updates the UserToken field, Normal this is called automatically.
            The is provided to the end-user to allow them to reteive tokens on their onw.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.RequestMapServerConfiguration">
            <summary>
            Retreives a detailed configuration from the Map Server
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.GetResponseCompleted``1(System.IAsyncResult)">
            <summary>
            Handles all http web respones and acts on them.
            </summary>
            <typeparam name="T">The type of response to decode</typeparam>
            <param name="res">The HTTP Request Response</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.OnPropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Handles certain property changed events
            </summary>
            <param name="propertyName"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.MapServerUri">
            <summary>
            Gets or sets the map tile server uri.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.UserName">
            <summary>
            Gets or sets the UserName.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.Password">
            <summary>
            Gets or sets the Password.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.UserToken">
            <summary>
            Gets or sets the UserToken.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.IsMapPublic">
            <summary>
            Gets or sets the IsMapPublic variable.  A value of false requires authentication parameters.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.DefaultTokenTimeout">
            <summary>
            Gets or Sets the Default Token Timeout before the Token Expires, this value is in Minutes
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.TokenGenerationEndPoint">
            <summary>
            Gets or Sets the current endpoint to retrieve the token.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ArcGISOnlineMapImagery.RefererUri">
            <summary>
            Contains the User Supplied Referer Uri to be used in Token Generation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.BingMapsImageryStyle">
            <summary>
            Describes available map styles for the Bing Maps imagery.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.BingMapsImageryStyle.Aerial">
            <summary>
            Specifies the Aerial map style without road or labels overlay.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.BingMapsImageryStyle.AerialWithLabels">
            <summary>
            Specifies the Aerial map style with road and labels overlay.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.BingMapsImageryStyle.Road">
            <summary>
            Specifies the Roads map style without aerial overlay.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.BingResponse">
            <summary>
            Represents a response for the Bing Maps imagery.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.BingResponse.#ctor">
            <summary>
            Create an instance of the BingResponse object
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.BingResponse.ResourceSets">
            <summary>
            Gets or sets a list of resource sets for the imagery 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.BingResourceSet">
            <summary>
            Represents a resource set for the Bing Maps imagery.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.BingResourceSet.#ctor">
            <summary>
            Create an instance of the BingResourceSet object
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.BingResourceSet.Resources">
            <summary>
            Gets or sets a list of resources for the imagery 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.ImageryMetadata">
            <summary>
            Represents a metadata for the Bing Maps imagery.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.ImageryMetadata.#ctor">
            <summary>
            Create an instance of the ImageryMetadata object
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ImageryMetadata.ImageUrl">
            <summary>
            Gets or sets imagery link
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ImageryMetadata.ImageUrlSubdomains">
            <summary>
            Gets or sets imagery link sub domains
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.BingMapsMapImagery">
            <summary>
            UI element class used to display BingMapsMap imagery in the XamGeographicMap.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.BingMapsMapImagery.#ctor">
            <summary>
            BingMapsMapImagery constructor.
            </summary>        
        </member>
        <member name="M:Infragistics.Controls.Maps.BingMapsMapImagery.CreateView">
            <summary>
            Method called to create the View for this GeographicMapImagery.
            </summary>
            <returns>The newly created GeographicMapImageryView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.BingMapsMapImagery.OnViewCreated(Infragistics.Controls.Maps.GeographicMapImageryView)">
            <summary>
            Method called after the View has been created for this GeographicMapImagery.
            </summary>
            <param name="view">The View which was just created.</param>
        </member>
        <member name="F:Infragistics.Controls.Maps.BingMapsMapImagery.IsDeferredLoadProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.BingMapsMapImagery.IsDeferredLoad"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.BingMapsMapImagery.TilePathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.BingMapsMapImagery.TilePath"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.BingMapsMapImagery.SubDomainsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.BingMapsMapImagery.SubDomains"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.BingMapsMapImagery.CultureNameProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.BingMapsMapImagery.CultureName"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.BingMapsMapImagery.ApiKeyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.BingMapsMapImagery.ApiKey"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.BingMapsMapImagery.ImageryStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.BingMapsMapImagery.ImageryStyle"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.BingMapsMapImagery.RequestMapSettings">
            <summary>
            Will Connect to the Bing Rest API and retreive the required TilePath and Subdomains from the service.  This requires a valid API key to already be set.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.BingMapsMapImagery.IsInitialized">
            <summary>
            Gets a status whether the Bing Maps service is initialized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.BingMapsMapImagery.IsDeferredLoad">
            <summary>
            Gets or sets whether the Bing Maps service should be auto-initialized upon valid property values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.BingMapsMapImagery.TilePath">
            <summary>
            Gets or sets the map tile image uri.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.BingMapsMapImagery.SubDomains">
            <summary>
            Gets or sets the collection of image uri subdomains.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.BingMapsMapImagery.ActualTilePath">
            <summary>
            Gets or sets the actual map tile image uri.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.BingMapsMapImagery.ActualSubDomains">
            <summary>
            Gets or sets the actual collection of image uri subdomains.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.BingMapsMapImagery.BingImageryRestUri">
            <summary>
            Gets or sets the Bing Imagery Rest Uri.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.BingMapsMapImagery.ActualBingImageryRestUri">
            <summary>
            Gets or sets the Actual Bing Imagery Rest Uri.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.BingMapsMapImagery.CultureName">
            <summary>
            Gets or sets the culture name for this tile source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.BingMapsMapImagery.ApiKey">
            <summary>
            Gets or sets an API key required by the Bing Maps imagery service.
            <remarks>This key must be obtained from the http://www.bingmapsportal.com website. </remarks>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.BingMapsMapImagery.ImageryStyle">
            <summary>
            <para> Gets or sets a map style of the Bing Maps imagery tiles. </para>
            <para> For example: Aerial, AerialWithLabels, or Road map style. </para>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.GeographicMapImageryView">
            <summary>
            View class for GeographicMapImagery objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapImageryView.#ctor(Infragistics.Controls.Maps.GeographicMapImagery)">
            <summary>
            GeographicMapImageryView constructor.
            </summary>
            <param name="model">The GeographicMapImagery object being served by this view.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicMapImageryView.Model">
            <summary>
            The GeographicMapImagery object being served by this view.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.CloudMadeMapImagery">
            <summary>
            UI element class used to display CloudMadeMap imagery in the XamGeographicMap.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.CloudMadeMapImagery.#ctor">
            <summary>
            CloudMadeMapImagery constructor.
            </summary>        
        </member>
        <member name="M:Infragistics.Controls.Maps.CloudMadeMapImagery.CreateView">
            <summary>
            Method called to create the View for this GeographicMapImagery.
            </summary>
            <returns>The newly created GeographicMapImageryView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.CloudMadeMapImagery.OnViewCreated(Infragistics.Controls.Maps.GeographicMapImageryView)">
            <summary>
            Method called after the View has been created for this GeographicMapImagery.
            </summary>
            <param name="view">The View which was just created.</param>
        </member>
        <member name="F:Infragistics.Controls.Maps.CloudMadeMapImagery.KeyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.CloudMadeMapImagery.Key"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.CloudMadeMapImagery.ParameterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.CloudMadeMapImagery.Parameter"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.CloudMadeMapImagery.Key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.CloudMadeMapImagery.Parameter">
            <summary>
            Gets or sets the Parameter.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.OpenStreetMapImagery">
            <summary>
            UI element class used to display OpenStreetMap imagery in the XamGeographicMap.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.OpenStreetMapImagery.#ctor">
            <summary>
            OpenStreetMapImagery constructor.
            </summary>        
        </member>
        <member name="T:Infragistics.Controls.Maps.GeographicTileSeries">
            <summary>
            Series class used for displaying a tile set, and using shapes to define the areas that should be rendered.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.GeographicShapeSeriesBase">
            <summary>
            Base class for series which render polygons on a map.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.GeographicMapSeriesHost`1">
            <summary>
            Base class for hosting chart series in a XamGeographicMap.
            </summary>
            <typeparam name="T">The Type of the series to be hosted.</typeparam>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapSeriesHost`1.#ctor">
            <summary>
            GeographicMapSeriesHost constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapSeriesHost`1.OnHostedSeriesUpdated">
            <summary>
            Called whenever the value of the HostedSeries property has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapSeriesHost`1.CreateSeries">
            <summary>
            Creates the Series to be hosted by this GeographicMapSeriesHost.
            </summary>
            <returns>The series to be hosted.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapSeriesHost`1.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A HostedSeriesView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapSeriesHost`1.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicMapSeriesHost`1.VisibleFromScaleProperty">
            <summary>
            Identifies the VisibleFromScale dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapSeriesHost`1.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicMapSeriesHost`1.RenderSeries(System.Boolean)">
            <summary>
            Renders the series.
            </summary>
            <param name="animate">True if the change should be animated.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicMapSeriesHost`1.HostedSeries">
            <summary>
            The chart series which is being hosted by this map series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicMapSeriesHost`1.VisibleFromScale">
            <summary>
            The minimum scale at which this series becomes visible.
            </summary>
            <remarks>
            The default value for this property is 1.0, which means the series will always be visible.  At a VisibleFromScale setting of 0.0, the series will never be visible.  At a VisibleFromScale setting of 0.5, the series will be visible as long as the map is zoomed in to at least 200%.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicShapeSeriesBase.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A GeographicShapeSeriesBaseView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicShapeSeriesBase.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicShapeSeriesBase.ShapeMemberPathProperty">
            <summary>
            Identifies the ShapeMemberPath property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicShapeSeriesBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicShapeSeriesBase.ShapeFilterResolutionProperty">
            <summary>
            Identifies the ShapeFilterResolution dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicShapeSeriesBase.ShapeMemberPath">
            <summary>
            The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.
            </summary>
            <remarks>
            To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicShapeSeriesBase.ShapeFilterResolution">
            <summary>
            The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.
            </summary>
            <remarks>
            In the case of PolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicTileSeries.#ctor">
            <summary>
            GeographicTileSeries constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicTileSeries.ClippingFillRuleProperty">
            <summary>
            Identifies the ClippingFillRule dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicTileSeries.ClearTileCache">
            <summary>
            Removes all cached tile Imagery from the 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicTileSeries.CreateSeries">
            <summary>
            Creates the Series to be hosted by this GeographicMapSeriesHost.
            </summary>
            <returns>The series to be hosted.</returns>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicTileSeries.TileImagery">
            <summary>
            The MapImagery which is used to provide the tiles for display.
            </summary>        
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicTileSeries.ClippingFillRule">
            <summary>
            The fill rule to use when clipping the tile imagery to the provided shapes.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Maps.GeographicTileSeries.ImageTilesReady">
            <summary>
            This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.GeographicContourLineSeries">
            <summary>
            Series class for ContourLineSeries displayed on a map.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries">
            <summary>
            Base class for geographic series which triangulate XY data prior to rendering.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A GeographicXYTriangulatingSeriesView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.LongitudeMemberPathProperty">
            <summary>
            Identifies the LongitudeMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.LatitudeMemberPathProperty">
            <summary>
            Identifies the LatitudeMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.TrianglesSourceProperty">
            <summary>
            Identifies the TrianglesSource dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.TriangleVertexMemberPath1Property">
            <summary>
            Identifies the TriangleVertexMemberPath1 dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.TriangleVertexMemberPath2Property">
            <summary>
            Identifies the TriangleVertexMemberPath2 dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.TriangleVertexMemberPath3Property">
            <summary>
            Identifies the TriangleVertexMemberPath3 dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.LongitudeMemberPath">
            <summary>
            The name of the property from which to extract the Longitude for each item in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.LatitudeMemberPath">
            <summary>
            The name of the property from which to extract the Latitude for each item in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.TrianglesSource">
            <summary>
            The source of triangulation data.
            </summary>
            <remarks>This property is optional.  If it is left as null, the triangulation will be created based on the items in the ItemsSource.  Triangulation is a demanding operation, so the runtime performance will be better when specifying a TriangulationSource, especially when a large number of data items are present.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.TriangleVertexMemberPath1">
            <summary>
            The name of the property of the TrianglesSource items which, for each triangle, contains the index of the first vertex point in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.TriangleVertexMemberPath2">
            <summary>
            The name of the property of the TrianglesSource items which, for each triangle, contains the index of the second vertex point in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicXYTriangulatingSeries.TriangleVertexMemberPath3">
            <summary>
            The name of the property of the TrianglesSource items which, for each triangle, contains the index of the third vertex point in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicContourLineSeries.#ctor">
            <summary>
            GeographicContourLineSeries constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicContourLineSeries.OnHostedSeriesUpdated">
            <summary>
            Called whenever the value of the HostedSeries property has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicContourLineSeries.CreateSeries">
            <summary>
            Creates the Series to be hosted by this GeographicMapSeriesHost.
            </summary>
            <returns>The series to be hosted.</returns>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicContourLineSeries.ValueMemberPathProperty">
            <summary>
            Identifies the ValueMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicContourLineSeries.FillScaleProperty">
            <summary>
            Identifies the FillScale dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicContourLineSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A GeographicScatterAreaSeriesView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicContourLineSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicContourLineSeries.ValueResolverProperty">
            <summary>
            Identifies the ValueResolver dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicContourLineSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicContourLineSeries.ValueMemberPath">
            <summary>
            The name of the property from which to retrieve the numeric values from the ItemsSource items.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicContourLineSeries.FillScale">
            <summary>
            The ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicContourLineSeries.ValueResolver">
            <summary>
            The ContourValueResolver used to determine the numeric values of contours.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Maps.GeographicContourLineSeries.TriangulationStatusChanged">
            <summary>
            Raised when the status of an ongoing Triangulation has changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries">
            <summary>
            Series class for a geographic map with points marked at given locations.
            </summary>
            <remarks>
            This is the geographic equivalent of a HighDensityScatterSeries.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.#ctor">
            <summary>
            GeographicHighDensityScatterSeries constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A GeographicHighDensityScatterSeriesView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.CreateSeries">
            <summary>
            Creates the Series to be hosted by this GeographicMapSeriesHost.
            </summary>
            <returns>The series to be hosted.</returns>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.LatitudeMemberPathProperty">
            <summary>
            Identifies the LatitudeMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.LongitudeMemberPathProperty">
            <summary>
            Identifies the LongitudeMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.UseBruteForceProperty">
            <summary>
            Identifies the UseBruteForce dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.ProgressiveLoadProperty">
            <summary>
            Identifies the ProgressiveLoad dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.MouseOverEnabledProperty">
            <summary>
            Identifies the MouseOverEnabled dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.HeatMinimumProperty">
            <summary>
            Identifies the HeatMinimum dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.HeatMaximumProperty">
            <summary>
            Identifies the HeatMaximum dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.HeatMinimumColorProperty">
            <summary>
            Identifies the HeatMinimumColor dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.HeatMaximumColorProperty">
            <summary>
            Identifies the HeatMinimumColor dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.PointExtentProperty">
            <summary>
            Identifies the PointExtent dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.LatitudeMemberPath">
            <summary>
            The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.LongitudeMemberPath">
            <summary>
            The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.UseBruteForce">
            <summary>
            Gets or sets the whether to use use brute force mode.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.ProgressiveLoad">
            <summary>
            Gets or sets the whether to progressively load the data into the chart.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.MouseOverEnabled">
            <summary>
            Gets or sets the whether the chart reacts to mouse move events.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.HeatMinimum">
            <summary>
            Gets or sets the density value that maps to the minimum heat color.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.HeatMaximum">
            <summary>
            Gets or sets the value that maps to the maximum heat color.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.HeatMinimumColor">
            <summary>
            Gets or sets the color to use for the minimum end of the scale.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.HeatMaximumColor">
            <summary>
            Gets or sets the color to use for the maximum end of the scale.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.PointExtent">
            <summary>
            Gets or sets the the pixel extent of the square data points that are rendered.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.ProgressiveLoadStatusChanged">
            <summary>
            Raised when the progressive loading state of the series has changed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicHighDensityScatterSeries.ProgressiveStatus">
            <summary>
            Represents the current status of the progressive load of the series. It will range from 0 to 100, where 100 is fully loaded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.GeographicPolylineSeries">
            <summary>
            Series class used for displaying multiple polylines, in a geographic context, for datasources which contain multiple lists of points.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicPolylineSeries.#ctor">
            <summary>
            GeographicPolylineSeries constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicPolylineSeries.ShapeStyleSelectorProperty">
            <summary>
            Identifies the ShapeStyleSelector dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicPolylineSeries.ShapeStyleProperty">
            <summary>
            Identifies the ShapeStyle dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicPolylineSeries.CreateSeries">
            <summary>
            Creates the Series to be hosted by this GeographicMapSeriesHost.
            </summary>
            <returns>The series to be hosted.</returns>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicPolylineSeries.ShapeStyleSelector">
            <summary>
            The StyleSelector which is used to select a style for each Shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicPolylineSeries.ShapeStyle">
            <summary>
            The default style to apply to all Shapes in the series.
            </summary>     
        </member>
        <member name="T:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries">
            <summary>
            Series class for a geographic map with points marked at given locations.
            </summary>
            <remarks>
            This is the geographic equivalent of a ScatterSeries.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.#ctor">
            <summary>
            GeographicSymbolSeries constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A GeographicProportionalSizeSeriesView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.CreateSeries">
            <summary>
            Creates the Series to be hosted by this GeographicMapSeriesHost.
            </summary>
            <returns>The series to be hosted.</returns>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.LatitudeMemberPathProperty">
            <summary>
            Identifies the LatitudeMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.LongitudeMemberPathProperty">
            <summary>
            Identifies the LongitudeMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.MarkerTypeProperty">
            <summary>
            Identifies the MarkerType dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.MarkerTemplateProperty">
            <summary>
            Identifies the MarkerTemplate dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.MarkerBrushProperty">
            <summary>
            Identifies the MarkerBrush dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.MarkerOutlineProperty">
            <summary>
            Identifies the MarkerOutline dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.MaximumMarkersProperty">
            <summary>
            Identifies the MaximumMarkers dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.RadiusMemberPathProperty">
            <summary>
            Identifies the RadiusMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.RadiusScaleProperty">
            <summary>
            Identifies the RadiusScale dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.LabelMemberPathProperty">
            <summary>
            Identifies the LabelMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.FillMemberPathProperty">
            <summary>
            Identifies the FillMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.FillScaleProperty">
            <summary>
            Identifies the FillScale dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.LatitudeMemberPath">
            <summary>
            The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.LongitudeMemberPath">
            <summary>
            The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.MarkerType">
            <summary>
            Gets or sets the marker type for the current series object.
            </summary>
            <remarks>
            If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.MarkerTemplate">
            <summary>
            Gets or sets the MarkerTemplate for the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.MarkerBrush">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker interiors are painted.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.MarkerOutline">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker outlines are painted.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.MaximumMarkers">
            <summary>
            Gets or sets the maximum number of markerItems displayed by the current series.
            <para>If more than the specified number of markerItems are visible, the series will automatically
            choose a representative set.</para>
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.RadiusMemberPath">
            <summary>
            Gets or sets the radius mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.RadiusScale">
            <summary>
            Gets or sets the radius size scale for the bubbles.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.LabelMemberPath">
            <summary>
            Gets or sets the Label mapping property for the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.FillMemberPath">
            <summary>
            Gets or sets the fill mapping property for the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicProportionalSymbolSeries.FillScale">
            <summary>
            Gets or sets the brush scale for the marker brush.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.GeographicScatterAreaSeries">
            <summary>
            Series class which draws a colored 2D surface, in a geographic context, based on a triangulation of XY data with numeric values assigned to each point.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicScatterAreaSeries.#ctor">
            <summary>
            GeographicScatterAreaSeries constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicScatterAreaSeries.ColorMemberPathProperty">
            <summary>
            Identifies the ColorMemberPath dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicScatterAreaSeries.OnApplyTemplate">
            <summary>
            Method invoked whenever application code or internal processes call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicScatterAreaSeries.CreateSeries">
            <summary>
            Creates the Series to be hosted by this GeographicMapSeriesHost.
            </summary>
            <returns>The series to be hosted.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicScatterAreaSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A GeographicScatterAreaSeriesView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicScatterAreaSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicScatterAreaSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicScatterAreaSeries.ColorMemberPath">
            <summary>
            The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicScatterAreaSeries.ColorScale">
            <summary>
            The ColorScale used to resolve the color values of points in the series.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Maps.GeographicScatterAreaSeries.TriangulationStatusChanged">
            <summary>
            Raised when the status of an ongoing Triangulation has changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.GeographicShapeControlSeries">
            <summary>
            Series class which renders polygons as Controls, in a geographic context, based on lists of points in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicShapeControlSeries.#ctor">
            <summary>
            GeographicShapeControlSeries constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicShapeControlSeries.CreateSeries">
            <summary>
            Creates the Series to be hosted by this GeographicMapSeriesHost.
            </summary>
            <returns>The series to be hosted.</returns>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicShapeControlSeries.ShapeStyleSelectorProperty">
            <summary>
            Identifies the ShapeStyleSelector dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicShapeControlSeries.ShapeStyleProperty">
            <summary>
            Identifies the ShapeStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicShapeControlSeries.ShapeStyleSelector">
            <summary>
            The StyleSelector which is used to select a style for each Shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicShapeControlSeries.ShapeStyle">
            <summary>
            The default style to apply to all Shapes in the series.
            </summary>     
        </member>
        <member name="T:Infragistics.Controls.Maps.GeographicShapeSeries">
            <summary>
            Series class which renders polygons as Paths, in a geographic context, based on lists of points in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicShapeSeries.#ctor">
            <summary>
            GeographicShapeSeries constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicShapeSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A GeographicShapeSeriesView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicShapeSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicShapeSeries.CreateSeries">
            <summary>
            Creates the Series to be hosted by this GeographicMapSeriesHost.
            </summary>
            <returns>The series to be hosted.</returns>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicShapeSeries.ShapeStyleSelectorProperty">
            <summary>
            Identifies the ShapeStyleSelector dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicShapeSeries.ShapeStyleProperty">
            <summary>
            Identifies the ShapeStyle dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicShapeSeries.MarkerTypeProperty">
            <summary>
            Identifies the MarkerType dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicShapeSeries.MarkerTemplateProperty">
            <summary>
            Identifies the MarkerTemplate dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicShapeSeries.MarkerBrushProperty">
            <summary>
            Identifies the MarkerBrush dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicShapeSeries.MarkerOutlineProperty">
            <summary>
            Identifies the MarkerOutline dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicShapeSeries.MarkerStyleProperty">
            <summary>
            Identifies the MarkerStyle dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicShapeSeries.MarkerCollisionAvoidanceProperty">
            <summary>
            Identifies the MarkerCollisionAvoidance dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicShapeSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicShapeSeries.ShapeStyleSelector">
            <summary>
            The StyleSelector which is used to select a style for each Shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicShapeSeries.ShapeStyle">
            <summary>
            The default style to apply to all Shapes in the series.
            </summary>     
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicShapeSeries.MarkerType">
            <summary>
            Gets or sets the marker type for the current series object.
            </summary>
            <remarks>
            If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicShapeSeries.MarkerTemplate">
            <summary>
            Gets or sets the MarkerTemplate for the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicShapeSeries.MarkerBrush">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker interiors are painted.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicShapeSeries.MarkerOutline">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker outlines are painted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicShapeSeries.MarkerStyle">
            <summary>
            Gets or sets the Style to be used for the markers.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicShapeSeries.MarkerCollisionAvoidance">
            <summary>
            The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.GeographicSymbolSeries">
            <summary>
            Series class for a geographic map with points marked at given locations.
            </summary>
            <remarks>
            This is the geographic equivalent of a ScatterSeries.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicSymbolSeries.#ctor">
            <summary>
            GeographicSymbolSeries constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicSymbolSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A GeographicSymbolSeriesView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicSymbolSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicSymbolSeries.CreateSeries">
            <summary>
            Creates the Series to be hosted by this GeographicMapSeriesHost.
            </summary>
            <returns>The series to be hosted.</returns>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicSymbolSeries.LatitudeMemberPathProperty">
            <summary>
            Identifies the LatitudeMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicSymbolSeries.LongitudeMemberPathProperty">
            <summary>
            Identifies the LongitudeMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicSymbolSeries.MarkerTypeProperty">
            <summary>
            Identifies the MarkerType dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicSymbolSeries.MarkerTemplateProperty">
            <summary>
            Identifies the MarkerTemplate dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicSymbolSeries.MarkerCollisionAvoidanceProperty">
            <summary>
            Identifies the MarkerCollisionAvoidance dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicSymbolSeries.MarkerBrushProperty">
            <summary>
            Identifies the MarkerBrush dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicSymbolSeries.MarkerOutlineProperty">
            <summary>
            Identifies the MarkerOutline dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.GeographicSymbolSeries.MaximumMarkersProperty">
            <summary>
            Identifies the MaximumMarkers dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.GeographicSymbolSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicSymbolSeries.LatitudeMemberPath">
            <summary>
            The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicSymbolSeries.LongitudeMemberPath">
            <summary>
            The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicSymbolSeries.MarkerType">
            <summary>
            Gets or sets the marker type for the current series object.
            </summary>
            <remarks>
            If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicSymbolSeries.MarkerCollisionAvoidance">
            <summary>
            The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicSymbolSeries.MarkerTemplate">
            <summary>
            Gets or sets the MarkerTemplate for the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicSymbolSeries.MarkerBrush">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker interiors are painted.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicSymbolSeries.MarkerOutline">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker outlines are painted.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.GeographicSymbolSeries.MaximumMarkers">
            <summary>
            Gets or sets the maximum number of markerItems displayed by the current series.
            <para>If more than the specified number of markerItems are visible, the series will automatically
            choose a representative set.</para>
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ContourLineSeries">
            <summary>
            Series class for rendering isarithmic contours based on a triangulation of X+Y+Value points in the ItemsSource.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.XYTriangulatingSeries">
            <summary>
            Base class for series which triangulate XY data prior to rendering.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XYTriangulatingSeries.XMemberPathProperty">
            <summary>
            Identifies the XMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XYTriangulatingSeries.YMemberPathProperty">
            <summary>
            Identifies the YMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XYTriangulatingSeries.XAxisProperty">
            <summary>
            Identifies the XAxis dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XYTriangulatingSeries.YAxisProperty">
            <summary>
            Identifies the YAxis dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYTriangulatingSeries.RenderSeriesOverride(System.Boolean)">
            <summary>
            Renders the series.
            </summary>
            <param name="animate">Whether or not to transition smoothly from the previous state of the series.</param>
            <remarks>
            The animate parameter is relevant only for series which implement transitions.  Not all series in the DataChart support this behavior.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYTriangulatingSeries.RegisterTriangleIntColumn(Infragistics.IFastItemsSource,System.String)">
            <summary>
            Registers a column in the FastItemsSource containing triangle indices.
            </summary>
            <param name="itemsSource">The FastItemsSource containing the triangle column.</param>
            <param name="memberPath">The property name to get triangle indices from on each item in the FastItemsSource.</param>
            <returns>An IFastItemColumn containing all the integer values in the FastItemsSource items at the given memberPath.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYTriangulatingSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYTriangulatingSeries.ValidateSeries(System.Windows.Rect,System.Windows.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYTriangulatingSeries.InvalidateAxes">
            <summary>
            Method called when the series has changed in a way that will invalidate the range and rendering of its axes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYTriangulatingSeries.DataUpdatedOverride(Infragistics.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            Method called whenever a change is made to the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYTriangulatingSeries.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYTriangulatingSeries.WindowRectChangedOverride(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Overriden in derived classes when they want to respond to the chart's window changing.
            </summary>
            <param name="oldWindowRect">The old window rectangle of the chart.</param>
            <param name="newWindowRect">The new window rectangle of the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYTriangulatingSeries.ViewportRectChangedOverride(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Overriden in derived classes when they want to respond to the viewport changing.
            </summary>
            <param name="oldViewportRect">The old viewport rectangle.</param>
            <param name="newViewportRect">The new viewport rectangle.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XYTriangulatingSeries.TrianglesSourceProperty">
            <summary>
            Identifies the TrianglesSource dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XYTriangulatingSeries.FastTrianglesSourceProperty">
            <summary>
            Identifies the FastTrianglesSource dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XYTriangulatingSeries.TriangleVertexMemberPath1Property">
            <summary>
            Identifies the TriangleVertexMemberPath1 dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XYTriangulatingSeries.TriangleVertexMemberPath2Property">
            <summary>
            Identifies the TriangleVertexMemberPath2 dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XYTriangulatingSeries.TriangleVertexMemberPath3Property">
            <summary>
            Identifies the TriangleVertexMemberPath3 dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYTriangulatingSeries.XMemberPath">
            <summary>
            The name of the property from which to extract the X-coordinate for each item in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYTriangulatingSeries.YMemberPath">
            <summary>
            The name of the property from which to extract the Y-coordinate for each item in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYTriangulatingSeries.XColumn">
            <summary>
            The FastItemColumn used to access the X values corresponding to XMemberPath.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYTriangulatingSeries.YColumn">
            <summary>
            The FastItemColumn used to access the Y values corresponding to YMemberPath.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYTriangulatingSeries.XAxis">
            <summary>
            The X-Axis for this series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYTriangulatingSeries.YAxis">
            <summary>
            The Y-Axis for this series.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XYTriangulatingSeries.TriangulationStatusChanged">
            <summary>
            Raised when the status of an ongoing Triangulation has changed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYTriangulatingSeries.TrianglesSource">
            <summary>
            The source of triangulation data.
            </summary>
            <remarks>This property is optional.  If it is left as null, the triangulation will be created based on the items in the ItemsSource.  Triangulation is a demanding operation, so the runtime performance will be better when specifying a TriangulationSource, especially when a large number of data items are present.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYTriangulatingSeries.FastTrianglesSource">
            <summary>
            The FastItemsSource which is created from the TrianglesSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYTriangulatingSeries.TriangleVertexMemberPath1">
            <summary>
            The name of the property of the TrianglesSource items which, for each triangle, contains the index of the first vertex point in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYTriangulatingSeries.TriangleVertexMemberPath2">
            <summary>
            The name of the property of the TrianglesSource items which, for each triangle, contains the index of the second vertex point in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYTriangulatingSeries.TriangleVertexMemberPath3">
            <summary>
            The name of the property of the TrianglesSource items which, for each triangle, contains the index of the third vertex point in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYTriangulatingSeries.TriangleVertexColumn1">
            <summary>
            The FastItemColumn containing the indices of first triangle vertices in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYTriangulatingSeries.TriangleVertexColumn2">
            <summary>
            The FastItemColumn containing the indices of second triangle vertices in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYTriangulatingSeries.TriangleVertexColumn3">
            <summary>
            The FastItemColumn containing the indices of third triangle vertices in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ContourLineSeries.#ctor">
            <summary>
            ContourLineSeries constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ContourLineSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A ContourLineSeriesView.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.ContourLineSeries.ValueMemberPathProperty">
            <summary>
            Identifies the ValueMemberPath dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ContourLineSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ContourLineSeries.RenderSeriesOverride(System.Boolean)">
            <summary>
            Renders the series.
            </summary>
            <param name="animate">Whether or not to transition smoothly from the previous state of the series.</param>
            <remarks>
            The animate parameter is relevant only for series which implement transitions.  Not all series in the DataChart support this behavior.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.ContourLineSeries.FillScaleProperty">
            <summary>
            Identifies the FillScale dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ContourLineSeries.ValidateSeries(System.Windows.Rect,System.Windows.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ContourLineSeries.ValueMemberPath">
            <summary>
            The name of the property from which to retrieve the numeric values from the ItemsSource items.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ContourLineSeries.ValueColumn">
            <summary>
            The FastItemColumn containing the numeric values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ContourLineSeries.FillScale">
            <summary>
            The ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ContourLineSeries.ValueResolver">
            <summary>
            The ContourValueResolver used to determine the numeric values of contours.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PolylineBuilder">
            <summary>
            Utility class for piecewise construction of indexed polylines.
            </summary>
            <remarks>
            This class represents polyline point as integer ids with the assumption that
            two vertices are identical if they have identical ids. The class itself
            has no need for any vertex-specific information such as its coordinates.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolylineBuilder.Clear">
            <summary>
            Clears all polylines from the current object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolylineBuilder.GetPolylines">
            <summary>
            Gets the list of polylines for the current object.
            </summary>
            <remarks>
            There may be zero or more constructed polylines each of length two or more. A polyline
            is represented as a list of integer ids as passed to the AddSegment method. Polylines
            do not contain self-intersections or adjacent coincident point. A polyline may form
            a loop, in which case its first and last point are identical.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolylineBuilder.AddSegment(System.Int32,System.Int32)">
            <summary>
            Adds a segment to the current object.
            </summary>
            <param name="begin">Id of the first point in the segment</param>
            <param name="end">Id of the end point in the segment</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ContourBuilder">
            <summary>
            Utility class for piecewise construction of edge-based contours.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ContourBuilder.Clear">
            <summary>
            Clears all polylines and point from the current object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ContourBuilder.Point(System.Int32,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculates an edge point for the current object and returns its point id.
            </summary>
            <remarks>
            The begin and edge point ids are hashed to produce a unique point id. The current implementation
            of the hash function is reliable for ids of less than 65536.
            </remarks>
            <param name="b">Edge begin point id</param>
            <param name="e">Edge end point id</param>
            <param name="xb">Edge begin point x coordinate.</param>
            <param name="yb">Edge begin point y coordinate.</param>
            <param name="zb">Edge begin point z coordinate.</param>
            <param name="xe">Edge end point x coordinate.</param>
            <param name="ye">Edge end point y coordinate.</param>
            <param name="ze">Edge end point z coordinate.</param>
            <param name="z">Contour v.</param>
            <returns>Unique vertex id.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ContourBuilder.X">
            <summary>
            Gets the list of x coordinates for the line in the current object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ContourBuilder.Y">
            <summary>
            Gets the list of y coordinates for the line in the current object.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ContourValueResolver">
            <summary>
            Class used to determine the numeric values of contour lines, given a larger list of numeric values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ContourValueResolver.GetContourValues(Infragistics.IFastItemColumn{System.Double})">
            <summary>
            Gets the numeric values of contour lines based on the given values.
            </summary>
            <param name="valueColumn">The FastItemColumn containing all numeric values for the series.</param>
            <returns>The numeric values at which contour lines should be placed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ContourValueResolver.PropertyUpdated(System.String,System.Object,System.Object)">
            <summary>
            Method invoked whenever a property value on the ContourValueResolver has changed.
            </summary>
            <param name="propertyName">The name of the changed property.</param>
            <param name="oldValue">The previous value of the changed property.</param>
            <param name="newValue">The new value of the changed property.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.ContourValueResolver.Updated">
            <summary>
            Raised when the ContourValueResolver has been updated and its contour values should be re-evaluated.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LinearContourValueResolver">
            <summary>
            ContourValueResolver class which resolves contour lines to be distributed at linear intervals from the data minimum to the data maximum.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearContourValueResolver.#ctor">
            <summary>
            LinearContourValueResolver constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearContourValueResolver.ValueCountProperty">
            <summary>
            Identifies the ValueCount dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearContourValueResolver.GetContourValues(Infragistics.IFastItemColumn{System.Double})">
            <summary>
            Gets the numeric values of contour lines based on the given values.
            </summary>
            <param name="valueColumn">The FastItemColumn containing all numeric values for the series.</param>
            <returns>The numeric values at which contour lines should be placed.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearContourValueResolver.ValueCount">
            <summary>
            The count of contour values to return.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PolylineSeries">
            <summary>
            Series class used for displaying multiple polylines for datasources which contain multiple lists of points.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ShapeSeriesBase">
            <summary>
            Series class for rendering polygons.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.#ctor">
            <summary>
            ShapeSeriesBase constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.OnApplyTemplate">
            <summary>
            Method invoked whenever application code or internal processes call ApplyTemplate.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeriesBase.ShapeMemberPathProperty">
            <summary>
            Identifies the ShapeMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeriesBase.XAxisProperty">
            <summary>
            Identifies the ActualXAxis dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeriesBase.YAxisProperty">
            <summary>
            Identifies the ActualYAxis dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.RegisterObjectColumn(System.String)">
            <summary>
            Registers a column in the FastItemsSource at the given memberPath.
            </summary>
            <param name="memberPath">The property name to get values from on each item in the FastItemsSource.</param>
            <returns>An IFastItemColumn containing all the values in the FastItemsSource items at the given memberPath.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.RenderSeriesOverride(System.Boolean)">
            <summary>
            Renders the series.
            </summary>
            <param name="animate">Whether or not to transition smoothly from the previous state of the series.</param>
            <remarks>
            The animate parameter is relevant only for series which implement transitions.  Not all series in the DataChart support this behavior.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.InvalidateAxes">
            <summary>
            Invalidates the X and Y axes of this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.WindowRectChangedOverride(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Overriden in derived classes when they want to respond to the chart's window changing.
            </summary>
            <param name="oldWindowRect">The old window rectangle of the chart.</param>
            <param name="newWindowRect">The new window rectangle of the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.ViewportRectChangedOverride(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Overriden in derived classes when they want to respond to the viewport changing.
            </summary>
            <param name="oldViewportRect">The old viewport rectangle.</param>
            <param name="newViewportRect">The new viewport rectangle.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeriesBase.FillScaleProperty">
            <summary>
            Identifies the FillScale dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeriesBase.FillMemberPathProperty">
            <summary>
            Identifies the FillMemberPath dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.DataUpdatedOverride(Infragistics.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            Overriden in derived classes to respond to data updates.
            </summary>
            <param name="action">The action performed on the bound data.</param>
            <param name="position">The position at which the action was performed.</param>
            <param name="count">The count of affected positions.</param>
            <param name="propertyName">The property name changed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.ValidateSeries(System.Windows.Rect,System.Windows.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeriesBase.ClipRect">
            <summary>
            The clipping area parameter for the clipper. Based on Viewport, but inflated to compensate for the StrokeThickness of the shapes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeriesBase.ShapeFilterResolutionProperty">
            <summary>
            Identifies the ShapeFilterResolution dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.ShapeMemberPath">
            <summary>
            The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.
            </summary>
            <remarks>
            To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.ShapeColumn">
            <summary>
            The FastItemColumn containing Shape points.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.XAxis">
            <summary>
            Gets or sets the effective x-axis for the current ScatterBase object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.YAxis">
            <summary>
            Gets or sets the effective y-axis for the current ScatterBase object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.BoundsColumn">
            <summary>
            The stored list of bounds for shapes in this series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.IsClosed">
            <summary>
            Boolean indicating whether shapes in this series should be closed polygons.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.FillScale">
            <summary>
            The ValueBrushScale to use when determining Brushes for each Shape, based on the values found in FillMemberPath.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.FillMemberPath">
            <summary>
            The name of the property on ItemsSource items which contains a numeric value to convert to a Brush using the FillScale.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.ShapeFilterResolution">
            <summary>
            The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.
            </summary>
            <remarks>
            In the case of PolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolylineSeries.#ctor">
            <summary>
            PolylineSeries constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolylineSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A PolylineSeriesView.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolylineSeries.ShapeStyleSelectorProperty">
            <summary>
            Identifies the ShapeStyleSelector dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolylineSeries.ShapeStyleProperty">
            <summary>
            Identifies the ShapeStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolylineSeries.IsClosed">
            <summary>
            Boolean indicating whether shapes in this series should be closed polygons.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolylineSeries.ShapeStyleSelector">
            <summary>
            The StyleSelector which is used to select a style for each Shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolylineSeries.ShapeStyle">
            <summary>
            The default style to apply to all Shapes in the series.
            </summary>        
        </member>
        <member name="T:Infragistics.Controls.Charts.PolylineSeriesView">
            <summary>
            View class for PolylineSeries.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ShapeSeriesViewBase">
            <summary>
            Base class for views of ShapeSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.#ctor(Infragistics.Controls.Charts.ShapeSeriesBase)">
            <summary>
            ShapeSeriesViewBase constructor.
            </summary>
            <param name="model">The ShapeSeriesBase in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.CreateElementsPool">
            <summary>
            Create the pool of FrameworkElements which represent the series visuals.
            </summary>
            <returns>A pool of FrameworkElements with Create, Activate, Disactivate, and Destroy delegates defined.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.ShouldRenderShape(System.Windows.Rect)">
            <summary>
            Tests to see if a shape with the given bounds should be rendered.
            </summary>
            <param name="bounds">The bounds of the shape under observation.</param>
            <returns>True if the shape should be rendered, otherwise false.</returns>
            <remarks>The value of the ShapeFilterResolution property will determine the result when this method is called.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.ApplyData(System.Windows.FrameworkElement,System.Windows.Media.PathGeometry)">
            <summary>
            Applies the given Path data to the given FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to display the path data in.</param>
            <param name="data">The Path data to be displayed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.ApplyStyling(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Applies visual styling to the given FrameworkElement based on the given data item.
            </summary>
            <param name="shape">The FrameworkElement in context.</param>
            <param name="item">The data item in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.ClearValues(System.Windows.FrameworkElement)">
            <summary>
            Clears all item-specific bindings and settings for a FrameworkElement, so that it can be recycled and used for another item.
            </summary>
            <param name="element">The FrameworkElement to clear.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.GetShapeGeometry(System.Int32,System.Collections.Generic.List{System.Windows.Media.PointCollection})">
            <summary>
            Gets the PathGeometry for the given list of points.
            </summary>
            <param name="points">The list of points to convert to a PathGeometry.</param>
            <returns>The PathGeometry to render for the given list of points.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.ClearRendering">
            <summary>
            Clears the rendering for the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesViewBase.ShapeModel">
            <summary>
            A reference to the ShapeSeriesBase associated with this view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesViewBase.Elements">
            <summary>
            The FrameworkElements which are the ShapeSeries visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolylineSeriesView.#ctor(Infragistics.Controls.Charts.PolylineSeries)">
            <summary>
            PolylineSeriesView constructor.
            </summary>
            <param name="model">The PolylineSeries in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolylineSeriesView.GetShapeGeometry(System.Int32,System.Collections.Generic.List{System.Windows.Media.PointCollection})">
            <summary>
            Gets the PathGeometry for the given list of points.
            </summary>
            <param name="points">The list of points to convert to a PathGeometry.</param>
            <returns>The PathGeometry to render for the given list of points.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolylineSeriesView.ApplyStyling(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Applies visual styling to the given FrameworkElement based on the given data item.
            </summary>
            <param name="shape">The FrameworkElement in context.</param>
            <param name="item">The data item in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolylineSeriesView.ApplyData(System.Windows.FrameworkElement,System.Windows.Media.PathGeometry)">
            <summary>
            Applies the given Path data to the given FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to display the path data in.</param>
            <param name="data">The Path data to be displayed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolylineSeriesView.ClearValues(System.Windows.FrameworkElement)">
            <summary>
            Clears all item-specific bindings and settings for a FrameworkElement, so that it can be recycled and used for another item.
            </summary>
            <param name="element">The FrameworkElement to clear.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolylineSeriesView.ShouldRenderShape(System.Windows.Rect)">
            <summary>
            Tests to see if a shape with the given bounds should be rendered.
            </summary>
            <param name="bounds">The bounds of the shape under observation.</param>
            <returns>True if the shape should be rendered, otherwise false.</returns>
            <remarks>The value of the ShapeFilterResolution property will determine the result when this method is called.</remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterAreaSeries">
            <summary>
            Series class which draws a colored 2D surface based on a triangulation of XY data with numeric values assigned to each point.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.#ctor">
            <summary>
            ScatterAreaSeries constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.OnApplyTemplate">
            <summary>
            Method invoked whenever application code or internal processes call ApplyTemplate.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterAreaSeries.ColorMemberPathProperty">
            <summary>
            Identifies the ColorMemberPath dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.RenderSeriesOverride(System.Boolean)">
            <summary>
            Renders the series.
            </summary>
            <param name="animate">Whether or not to transition smoothly from the previous state of the series.</param>
            <remarks>
            The animate parameter is relevant only for series which implement transitions.  Not all series in the DataChart support this behavior.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.GetItem(System.Windows.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The item that is the best match.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A ScatterAreaSeriesView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterAreaSeries.ColorScale">
            <summary>
            The ColorScale used to resolve the color values of points in the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterAreaSeries.ColorMemberPath">
            <summary>
            The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterAreaSeries.ColorColumn">
            <summary>
            The FastItemColumn containing numeric values which are converted to colors by the ColorScale.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterAreaSeriesView">
            <summary>
            View class for ScatterAreaSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeriesView.#ctor(Infragistics.Controls.Charts.ScatterAreaSeries)">
            <summary>
            ScatterAreaSeriesView constructor.
            </summary>
            <param name="model">The ScatterAreaSeries which this view is serving.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ShapeControl">
            <summary>
            Control class for hosting Path shapes so that they support control styling, e.g. the VisualStateManager.  Used mainly for ShapeControlSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeControl.#ctor">
            <summary>
            ShapeControl constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeControl.OnApplyTemplate">
            <summary>
            Method invoked whenever application code or internal processes call ApplyTemplate.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeControl.DataProperty">
            <summary>
            Identifies the Data dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeControl.MeasureOverride(System.Windows.Size)">
            <summary>
            
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeControl.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Method invoked when the mouse pointer enters this control.
            </summary>
            <param name="e">The MouseEventArgs in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeControl.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Method invoked when the mouse pointer leaves this control.
            </summary>
            <param name="e">The MouseEventArgs in context.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeControl.Data">
            <summary>
            The Geometry which will be rendered in a Path inside the Template of this ShapeControl.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ShapeControlSeries">
            <summary>
            Series class which renders polygons as Controls based on lists of points in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeControlSeries.#ctor">
            <summary>
            ShapeControlSeries constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeControlSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A ShapeControlSeriesView.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeControlSeries.ShapeStyleSelectorProperty">
            <summary>
            Identifies the ShapeStyleSelector dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeControlSeries.ShapeStyleProperty">
            <summary>
            Identifies the ShapeStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeControlSeries.ShapeStyleSelector">
            <summary>
            The StyleSelector which is used to select a style for each Shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeControlSeries.ShapeStyle">
            <summary>
            The default style to apply to all Shapes in the series.
            </summary>        
        </member>
        <member name="T:Infragistics.Controls.Charts.ShapeControlSeriesView">
            <summary>
            View class for ShapeControlSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeControlSeriesView.#ctor(Infragistics.Controls.Charts.ShapeControlSeries)">
            <summary>
            ShapeControlSeriesView constructor.
            </summary>
            <param name="model">The ShapeControlSeries being served by this view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeControlSeriesView.GetShapeGeometry(System.Int32,System.Collections.Generic.List{System.Windows.Media.PointCollection})">
            <summary>
            Gets the PathGeometry for the given list of points.
            </summary>
            <param name="points">The list of points to convert to a PathGeometry.</param>
            <returns>The PathGeometry to render for the given list of points.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeControlSeriesView.ApplyStyling(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Applies visual styling to the given FrameworkElement based on the given data item.
            </summary>
            <param name="shape">The FrameworkElement in context.</param>
            <param name="item">The data item in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeControlSeriesView.ApplyData(System.Windows.FrameworkElement,System.Windows.Media.PathGeometry)">
            <summary>
            Applies the given Path data to the given FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to display the path data in.</param>
            <param name="data">The Path data to be displayed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeControlSeriesView.CreateElementsPool">
            <summary>
            Create the pool of FrameworkElements which represent the series visuals.
            </summary>
            <returns>A pool of FrameworkElements with Create, Activate, Disactivate, and Destroy delegates defined.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.ShapeSeries">
            <summary>
            Series class which renders polygons as Paths based on lists of points in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeries.#ctor">
            <summary>
            ShapeSeries constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A ShapeSeriesView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeries.ShapeStyleSelectorProperty">
            <summary>
            Identifies the ShapeStyleSelector dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeries.ShapeStyleProperty">
            <summary>
            Identifies the ShapeStyle dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeries.MarkerTypeProperty">
            <summary>
            Identifies the MarkerType dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeries.MarkerTemplateProperty">
            <summary>
            Identifies the MarkerTemplate dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeries.ActualMarkerTemplateProperty">
            <summary>
            Identifies the ActualMarkerTemplate dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeries.MarkerBrushProperty">
            <summary>
            Identifies the MarkerBrush dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeries.ActualMarkerBrushProperty">
            <summary>
            Identifies the ActualMarkerBrush dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeries.MarkerOutlineProperty">
            <summary>
            Identifies the MarkerOutline dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeries.ActualMarkerOutlineProperty">
            <summary>
            Identifies the ActualMarkerOutline dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeries.MarkerStyleProperty">
            <summary>
            Identifies the MarkerStyle dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeries.MarkerCollisionAvoidanceProperty">
            <summary>
            Identifies the MarkerCollisionAvoidance dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeries.UpdateIndexedProperties">
            <summary>
            Updates properties that are based on the index of the series in the series collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeries.ShapeStyleSelector">
            <summary>
            The StyleSelector which is used to select a style for each Shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeries.ShapeStyle">
            <summary>
            The default style to apply to all Shapes in the series.
            </summary>        
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeries.MarkerType">
            <summary>
            Gets or sets the marker type for the current series object.
            </summary>
            <remarks>
            If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeries.MarkerTemplate">
            <summary>
            Gets or sets the MarkerTemplate for the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeries.ActualMarkerTemplate">
            <summary>
            Gets the effective marker template for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeries.MarkerBrush">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker interiors are painted.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeries.ActualMarkerBrush">
            <summary>
            Gets the effective marker brush for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeries.MarkerOutline">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker outlines are painted.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeries.ActualMarkerOutline">
            <summary>
            Gets the effective marker outline for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeries.MarkerStyle">
            <summary>
            Gets or sets the Style to be used for the markers.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeries.MarkerCollisionAvoidance">
            <summary>
            The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ShapeSeriesView">
            <summary>
            View class for ShapeSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesView.#ctor(Infragistics.Controls.Charts.ShapeSeries)">
            <summary>
            ShapeSeriesView constructor.
            </summary>
            <param name="model">The ShapeSeries being served by this view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesView.GetShapeGeometry(System.Int32,System.Collections.Generic.List{System.Windows.Media.PointCollection})">
            <summary>
            Gets the PathGeometry for the given list of points.
            </summary>
            <param name="points">The list of points to convert to a PathGeometry.</param>
            <returns>The PathGeometry to render for the given list of points.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesView.ApplyStyling(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Applies visual styling to the given FrameworkElement based on the given data item.
            </summary>
            <param name="shape">The FrameworkElement in context.</param>
            <param name="item">The data item in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesView.ApplyData(System.Windows.FrameworkElement,System.Windows.Media.PathGeometry)">
            <summary>
            Applies the given Path data to the given FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to display the path data in.</param>
            <param name="data">The Path data to be displayed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesView.MarkerCreate">
            <summary>
            Creates a marker object.
            </summary>
            <returns>The created marker.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesView.MarkerDestroy(Infragistics.Controls.Charts.Marker)">
            <summary>
            Destroys a marker from the pool.
            </summary>
            <param name="marker">The marker to destroy.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesView.MarkerActivate(Infragistics.Controls.Charts.Marker)">
            <summary>
            Activates a marker object from the pool.
            </summary>
            <param name="marker">The marker to activate.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesView.MarkerDisactivate(Infragistics.Controls.Charts.Marker)">
            <summary>
            Disactivates a marker from the pool.
            </summary>
            <param name="marker">The marker to disactivate.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesView.ClearValues(System.Windows.FrameworkElement)">
            <summary>
            Clears all item-specific bindings and settings for a FrameworkElement, so that it can be recycled and used for another item.
            </summary>
            <param name="element">The FrameworkElement to clear.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesView.ClearRendering">
            <summary>
            Clears the rendering for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TileSeries.ClippingFillRuleProperty">
            <summary>
            Identifies the ClippingFillRule dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileSeries.TileImagery">
            <summary>
            The MapImagery which is used to provide the tiles for display.
            </summary>        
        </member>
        <member name="P:Infragistics.Controls.Charts.TileSeries.ClippingFillRule">
            <summary>
            The fill rule to use when clipping the tile imagery to the provided shapes.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.TileSeries.ImageTilesReady">
            <summary>
            This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TileSeriesView">
            <summary>
            Represents a view of Tile Series   
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileSeriesView.TileModel">
            <summary>
            Gets or sets Tile Model
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.ShapefileConverter">
            <summary>
            Class used to convert Shapefiles into CLR objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileConverter.#ctor">
            <summary>
            ShapefileConverter constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapefileConverter.ShapefileSourceProperty">
            <summary>
            Identifies the ShapefileSource property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapefileConverter.DatabaseSourceProperty">
            <summary>
            Identifies the DatabaseSource dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileConverter.IndexOf(Infragistics.Controls.Maps.ShapefileRecord)">
            <summary>
            Returns the index of the given ShapefileRecord in the collection.
            </summary>
            <param name="item">The ShapefileRecord under observation.</param>
            <returns>The index of the given ShapefileRecord in the collection, or -1 if the collection does not contain the given ShapefileRecord.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileConverter.Insert(System.Int32,Infragistics.Controls.Maps.ShapefileRecord)">
            <summary>
            Inserts a ShapefileRecord into the collection at the specified index.
            </summary>
            <param name="index">The index at which to insert the ShapefileRecord.</param>
            <param name="item">The ShapefileRecord to insert.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileConverter.RemoveAt(System.Int32)">
            <summary>
            Removes the ShapefileRecord at the specified index.
            </summary>
            <param name="index">The index of the ShapefileRecord to remove.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileConverter.Add(Infragistics.Controls.Maps.ShapefileRecord)">
            <summary>
            Adds a ShapefileRecord to the collection.
            </summary>
            <param name="item">The ShapefileRecord to add.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileConverter.Clear">
            <summary>
            Removes all ShapefileRecords from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileConverter.Contains(Infragistics.Controls.Maps.ShapefileRecord)">
            <summary>
            Checks whether or not the given item is present in the collection.
            </summary>
            <param name="item">The item under observation.</param>
            <returns>True if the item is present in the collection, otherwise False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileConverter.CopyTo(Infragistics.Controls.Maps.ShapefileRecord[],System.Int32)">
            <summary>
            Copies the ShapefileRecords in the collection to the given array, starting at the specified index.
            </summary>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The index at which to start the copy operation.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileConverter.Remove(Infragistics.Controls.Maps.ShapefileRecord)">
            <summary>
            Removes a ShapefileRecord from the collection.
            </summary>
            <param name="item">The ShapefileRecord to remove.</param>
            <returns>True if the item was successfully removed, otherwise False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileConverter.GetEnumerator">
            <summary>
            Gets the <see cref="T:System.Collections.IEnumerator"/> for the collection.
            </summary>
            <returns>The IEnumerator for the collection.</returns>
        </member>
        <member name="P:Infragistics.Controls.Maps.ShapefileConverter.WorldRect">
            <summary>
            Gets the world bounding rectangle, as read from the header of the Shapefile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ShapefileConverter.ShapefileSource">
            <summary>
            The Uri of the .shp portion of the Shapefile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ShapefileConverter.DatabaseSource">
            <summary>
            The Uri of the .dbf portion of the Shapefile.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Maps.ShapefileConverter.ImportCompleted">
            <summary>
            Event raised when the Shapefile has been imported from both the ShapefileSource and DatabaseSource Uris.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Maps.ShapefileConverter.CollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ShapefileConverter.Item(System.Int32)">
            <summary>
            ShapefileConverter indexer.
            </summary>
            <param name="index">The index at which to return a ShapefileRecord.</param>
            <returns>The ShapefileRecord at the specified index.</returns>
        </member>
        <member name="P:Infragistics.Controls.Maps.ShapefileConverter.Count">
            <summary>
            The total number of ShapefileRecords in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ShapefileConverter.IsReadOnly">
            <summary>
            Boolean property indicating whether or not the collection is read-only.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.ShapefileRecord">
            <summary>
            Represents a record of data from a Shapefile (.shp and .dbf).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ShapefileRecord.Fields">
            <summary>
            A dictionary containing the field names and values for this record.
            </summary>
            <remarks>
            These values come from the .dbf file.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Maps.ShapefileRecord.Points">
            <summary>
            A list of lists of points for this record.
            </summary>
            <remarks>
            For information about this data structure, please refer to the Shapefile technical description.
            </remarks>
        </member>
        <member name="E:Infragistics.Controls.Maps.ShapefileRecord.PropertyChanged">
            <summary>
            Event raised whenever a property on this ShapefileRecord is changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.ShapefileRecordFields">
            <summary>
            Special collection class for ShapefileRecordFields, which are both ordered and indexable by key.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileRecordFields.#ctor">
            <summary>
            ShapefileRecordFields constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileRecordFields.Add(System.String,System.Object)">
            <summary>
            Adds a field to the collection.
            </summary>
            <param name="key">The key of the field being added.</param>
            <param name="value">The value of the field being added.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileRecordFields.Insert(System.Int32,System.String,System.Object)">
            <summary>
            Inserts a field key and value into the collection at the specified index.
            </summary>
            <param name="index">The index at which to insert the field key and value.</param>
            <param name="key">The key of the field being added.</param>
            <param name="value">The value of the field being added.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileRecordFields.Remove(System.Object)">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="item">The item to remove.</param>
            <returns>True if the item was successfully removed, otherwise False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileRecordFields.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The index of the item to remove.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileRecordFields.IndexOf(System.Object)">
            <summary>
            Returns the index of the given value in the collection.
            </summary>
            <param name="item">The value under observation.</param>
            <returns>The index of the given value in the collection, or -1 if the collection does not contain the given ShapefileRecord.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileRecordFields.Clear">
            <summary>
            Resets the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileRecordFields.Contains(System.Object)">
            <summary>
            Checks whether or not the given item is present in the collection.
            </summary>
            <param name="item">The item under observation.</param>
            <returns>True if the item is present in the collection, otherwise False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapefileRecordFields.GetEnumerator">
            <summary>
            Gets the <see cref="T:System.Collections.IEnumerator"/> for the collection.
            </summary>
            <returns>The IEnumerator for the collection.</returns>
        </member>
        <member name="P:Infragistics.Controls.Maps.ShapefileRecordFields.Keys">
            <summary>
            The field Keys.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ShapefileRecordFields.Item(System.String)">
            <summary>
            ShapefileRecord string indexer.
            </summary>
            <param name="key">The field key of the value to return.</param>
            <returns>The value with the specified key.</returns>
        </member>
        <member name="P:Infragistics.Controls.Maps.ShapefileRecordFields.Item(System.Int32)">
            <summary>
            ShapefileRecordFields int indexer.
            </summary>
            <param name="index">The index of the value to return.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="P:Infragistics.Controls.Maps.ShapefileRecordFields.Count">
            <summary>
            The total number of fields.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Maps.ShapefileRecordFields.CollectionChanged">
            <summary>
            Event raised when an item is added to or removed from the collection, or when the collection is reset or cleared.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.ShapeFileUtil">
            <summary>
            Represents an ESRI Shapefile.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapeFileUtil.ReadHeader(System.IO.BinaryReader,System.IO.BinaryReader)">
            <summary>
            Read header information from the specified streams. 
            </summary>
            <param name="shpReader"></param>
            <param name="dbfReader"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.ShapeFileUtil.ReadShape(Infragistics.Controls.Maps.Header,System.IO.BinaryReader,System.IO.BinaryReader)">
            <summary>
            Read shape information from the specified streams.
            </summary>
            <param name="shapeHeader"></param>
            <param name="shpReader"></param>
            <param name="dbfReader"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Maps.Header">
            <summary>
            Specifies global data from an ESRI shapefile.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.Header.dbfBaseFields">
            <summary>
            The list of fields in this Dbf header.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.Header.ShapeType">
            <summary>
            Sets or gets the shape type for the current shapefile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.Header.Bounds">
            <summary>
            Sets or gets the bounds for the current shapefile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.Header.XYMin">
            <summary>
            Sets or gets the minimum coordinate for the current shapefile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.Header.XYMax">
            <summary>
            
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.XBaseDataType">
            <summary>
            Enum for XBase field data types.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.Character">
            <summary>
            Character data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.Number">
            <summary>
            Number data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.Logical">
            <summary>
            Logical data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.Date">
            <summary>
            Date data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.Memo">
            <summary>
            Memo data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.FloatingPoint">
            <summary>
            Floating point data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.Binary">
            <summary>
            Binary data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.General">
            <summary>
            General data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.Picture">
            <summary>
            Picture data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.Currency">
            <summary>
            Currency data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.DateTime">
            <summary>
            DateTime data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.Integer">
            <summary>
            Integer data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.VariField">
            <summary>
            VariField data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.Variant">
            <summary>
            Variant data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.Timestamp">
            <summary>
            Timestamp data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.Double">
            <summary>
            Double data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseDataType.AutoIncrement">
            <summary>
            Auto increment data type.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.XBaseField">
            <summary>
            Class representing a field in an XBase file.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseField.Name">
            <summary>
            The field name.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseField.Type">
            <summary>
            The field data type.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XBaseField.Length">
            <summary>
            The field length.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.ShapeType">
            <summary>
            Describes available types of item represented by the current row of a shapefile.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapeType.None">
            <summary>
            A placeholder value which cannot occur when reading a shapefile.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapeType.Point">
            <summary>
            Specifies a point shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapeType.PolyLine">
            <summary>
            Specifies a polyline shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapeType.Polygon">
            <summary>
            Specifies a polygon shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapeType.PolyPoint">
            <summary>
            Specifies a polypoint shape (not supported; cannot occur when reading a shapefile)
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapeType.PointZ">
            <summary>
            Specifies a polypoint shape (not supported; cannot occur when reading a shapefile)
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapeType.PolyLineZ">
            <summary>
            Specifies a polylinez shape (not supported; cannot occur when reading a shapefile)
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapeType.PolygonZ">
            <summary>
            Specifies a polygonz shape (not supported; cannot occur when reading a shapefile)
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapeType.PolyPointZ">
            <summary>
            Specifies a polypointz shape (not supported; cannot occur when reading a shapefile)
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapeType.PointM">
            <summary>
            Specifies a pointm shape (not supported; cannot occur when reading a shapefile)
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapeType.PolyLineM">
            <summary>
            Specifies a polylinem shape (not supported; cannot occur when reading a shapefile)
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapeType.PolygonM">
            <summary>
            Specifies a polygonm shape (not supported; cannot occur when reading a shapefile)
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapeType.PolyPointM">
            <summary>
            Specifies a polypointm shape (not supported; cannot occur when reading a shapefile)
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ShapeType.PolyPatch">
            <summary>
            Specifies a polypatchm shape (not supported; cannot occur when reading a shapefile)
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ConditionalStyleRule">
            <summary>
            Base for classes capable of applying a given style based on a conditional evaluation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ConditionalStyleRule.EvaluateCondition(System.Object)">
            <summary>
            Evaluates the condition for the item in context.
            </summary>
            <param name="item">The data item in context.</param>
            <returns>True if the condition evaluates to true, otherwise False.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConditionalStyleRule.StyleToApply">
            <summary>
            The Style to apply to the UIElement if the condition evaluates to true.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ConditionalStyleSelector">
            <summary>
            StyleSelector class which selects a style based on a list of ConditionalStyleRule objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ConditionalStyleSelector.#ctor">
            <summary>
            ConditionalStyleSelector constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ConditionalStyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
            <summary>
            Returns the Style of the first ConditionalStyleRule in the list which evaluates to true given the data item in context.
            </summary>
            <param name="item">The data item in context.</param>
            <param name="container">The element to which the style will be applied.</param>
            <returns>The StyleToApply of the first ConditionalStyleRule in the Rules collection which evaluates to true given the data item in context.  If none of the Rules evaluate to true, then this method returns null.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConditionalStyleSelector.Rules">
            <summary>
            The list of ConditionalStyleRule objects used when finding a style.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.EqualToConditionalStyleRule">
            <summary>
            Rule class used for applying conditional styling for objects which pass an equality comparison.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PropertyValueConditionalStyleRule">
            <summary>
            Base class for conditional style rules based around the value of one named property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PropertyValueConditionalStyleRule.EvaluateCondition(System.Object)">
            <summary>
            Evaluates the condition for the item in context.
            </summary>
            <param name="item">The data item in context.</param>
            <returns>True if the condition evaluates to true, otherwise False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PropertyValueConditionalStyleRule.EvaluateConditionAgainstPropertyValue(System.Object)">
            <summary>
            Evaluates the condition against the given value.
            </summary>
            <param name="value">The value to evaluate against the condition.</param>
            <returns>True if the condition evaluates to true, otherwise False.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.PropertyValueConditionalStyleRule.ValueMemberPathProperty">
            <summary>
            Identifies the ValueMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PropertyValueConditionalStyleRule.ValueMemberPath">
            <summary>
            The name of the property from which to retrieve the numeric values from the items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.EqualToConditionalStyleRule.EvaluateConditionAgainstPropertyValue(System.Object)">
            <summary>
            Evaluates the equality of ComparisonValue and the given value.
            </summary>
            <param name="value">The value to compare to ComparisonValue.</param>
            <returns>True if ComparisonValue equals the value argument, otherwise False.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.EqualToConditionalStyleRule.ComparisonValueProperty">
            <summary>
            Identifies the ComparisonValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.EqualToConditionalStyleRule.ComparisonValue">
            <summary>
            The value to compare against when evaluating items for equality.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RandomFillStyleSelector">
            <summary>
            StyleSelector class which assigns Styles at random with a random brush assigned to the Fill property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RandomFillStyleSelector.#ctor">
            <summary>
            RandomFillStyleSelector constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RandomFillStyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
            <summary>
            Returns a Style for the given item.
            </summary>
            <param name="item">The data item in context.</param>
            <param name="container">The element to which the style will be applied.</param>
            <returns>A style with a Fill property setter whose value is a Brush picked at random from the Brushes collection.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.RandomFillStyleSelector.Brushes">
            <summary>
            A collection of brushes from which to pick at random when selecting a style.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RandomSelectStyleSelector">
            <summary>
            StyleSelector class which assigns Styles at random, picked from a list of Styles.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RandomSelectStyleSelector.#ctor">
            <summary>
            RandomSelectStyleSelector constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RandomSelectStyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
            <summary>
            Returns a Style for the given item.
            </summary>
            <param name="item">The data item in context.</param>
            <param name="container">The element to which the style will be applied.</param>
            <returns>A style with picked at random from the Styles collection.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.RandomSelectStyleSelector.Styles">
            <summary>
            The list of Styles from which to pick at random when selecting a style.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.ItfConverter">
            <summary>
            Class for converting Itf files into enumerable triangulations.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.ItfConverter.SourceProperty">
            <summary>
            Identifies the Source dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.ItfConverter.PropertyUpdated(System.String,System.Object,System.Object)">
            <summary>
            Invoked whenever a property value on this ItfConverter is updated.
            </summary>
            <param name="propertyName">The name of the property which was updated.</param>
            <param name="oldValue">The previous value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.ItfConverter.OnPropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Method invoked whenever a property is changed.
            </summary>
            <param name="propertyName">The name of the changed property.</param>
            <param name="oldValue">The previous value of the changed property.</param>
            <param name="newValue">The new value of the changed property.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.ItfConverter.Source">
            <summary>
            A Uri specifying the location of the Itf file.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.ItfConverter.TriangulationSource">
            <summary>
            The TriangulationSource which is typically created after importing the Itf from the Source Uri.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Maps.ItfConverter.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Triangle">
            <summary>
            Class representing a triangle in a triangulation.
            </summary>
            <remarks>
            The three vertex properties should point to the indices of Points in a known list.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.Triangle.V1">
            <summary>
            Vertex one.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Triangle.V2">
            <summary>
            Vertex two.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Triangle.V3">
            <summary>
            Vertex three.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TriangulationSource">
            <summary>
            Class for creating, loading, and storing triangulations.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TriangulationSource.Create(System.Int32,System.Func{System.Int32,System.Windows.Point},System.Func{System.Int32,System.Single})">
            <summary>
            Creates a TriangulationSource using delegates to get the Points and Values to create a triangulation from.
            </summary>
            <param name="count">The number of total points which a triangulation will be created from.</param>
            <param name="getXY">The delegate used to get a point at a given index.</param>
            <param name="getValue">The delegate used to get a numeric value at a given index.</param>
            <returns>A TriangulationSource created using the given delegates.</returns>
            <remarks>This operation is highly CPU-intensive and could take a long time to execute.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.TriangulationSource.LoadItf(System.IO.Stream)">
            <summary>
            Creates a TriangulationSource from an ITF.
            </summary>
            <param name="stream">The Stream which will be used to read the ITF.</param>
            <returns>A TriangulationSource object populated with points and triangle indices after reading the ITF from the given Stream.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TriangulationSource.LoadItf(System.IO.BinaryReader)">
            <summary>
            Creates a TriangulationSource from an ITF.
            </summary>
            <param name="reader">The BinaryReader which will be used to read the ITF.</param>
            <returns>A TriangulationSource object populated with points and triangle indices after reading the ITF from the given BinaryReader.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TriangulationSource.SaveItf(System.IO.Stream)">
            <summary>
            Saves the Triangulation to the binary ITF format.
            </summary>
            <param name="stream">The stream to save the triangulation to as ITF.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.TriangulationSource.Points">
            <summary>
            The collection of Points and numeric values from which the triangulation is created.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TriangulationSource.Triangles">
            <summary>
            The collection of triangle indices corresponding to the Points collection.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.Triangulator.TriangulationStatusChanged">
            <summary>
            Raised when the status of an ongoing Triangulation has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TriangulationStatusEventArgs.#ctor(System.Int32)">
            <summary>
            Constructs a TriangulationStatusEventArgs
            </summary>
            <param name="currentStatus">The current status of the load.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.TriangulationStatusEventArgs.CurrentStatus">
            <summary>
            The current status from 0 to 100 of the progressive triangulation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.HalfEdge">
            <summary>
            A directed half-edge segment defined by two vertex codes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HalfEdge.#ctor(System.Int32,System.Int32)">
            <summary>
            HalfEdge constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HalfEdge.B">
            <summary>
            B.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HalfEdge.E">
            <summary>
            resolution.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.HalfEdgeSet">
            <summary>
            Represents an unordered set of half-edges.
            </summary>
            <remarks>
            The set may not contain two half-edges which form together form a full edge, and it is an
            error to attempt to insert such a pair.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.HalfEdgeSet.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection. 
            </summary>
            <returns>An IEnumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HalfEdgeSet.Add(Infragistics.Controls.Charts.HalfEdge)">
            <summary>
            Adds a HalfEdge to the set.
            </summary>
            <param name="edge">The HalfEdge to add.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HalfEdgeSet.Remove(Infragistics.Controls.Charts.HalfEdge)">
            <summary>
            Removes a HalfEdge from the set.
            </summary>
            <param name="edge">The HalfEdge to remove from the set.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HalfEdgeSet.Clear">
            <summary>
            Clears the set.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HalfEdgeSet.Contains(Infragistics.Controls.Charts.HalfEdge)">
            <summary>
            Determines whether or not the given HalfEdge exists in the set.
            </summary>
            <param name="edge">The HalfEdge under observation.</param>
            <returns>True if the set contains the HalfEdge, otherwise False.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.HalfEdgeSet.Count">
            <summary>
            Count of HalfEdges in the set.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TriangulationSourcePointRecord">
            <summary>
            Class representing a single point and its associated value in a triangulation source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TriangulationSourcePointRecord.Point">
            <summary>
            The point.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TriangulationSourcePointRecord.Value">
            <summary>
            The numeric value associated with the point.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.XamGeographicMap">
            <summary>
            The Infragistics XamGeographicMap control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.#ctor">
            <summary>
            XamGeographicMap constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Maps.XamGeographicMap"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamGeographicMap.ZoomableProperty">
            <summary>
            Identifies the Zoomable dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamGeographicMap.WorldRectProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamGeographicMap.WorldRect"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.PadGeographicRect(System.Windows.Rect)">
            <summary>
            Adds padding to the Top and Bottom or to the Left and Right of the input Rect, then returns the result.
            The resulting Rect has the same aspect ratio as the default WorldRect.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.GetZoomRectFromGeoRect(System.Windows.Rect)">
            <summary>
            Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.
            </summary>
            <param name="geographic">The geographic area.</param>
            <returns>The window zoom area.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.GetZoomFromGeographic(System.Windows.Rect)">
            <summary>
            Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.
            </summary>
            <param name="geographic">The geographic area.</param>
            <returns>The window zoom area.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.GetZoomFromGeographic(System.Windows.Point,System.Windows.Point)">
            <summary>
            Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.
            </summary>
            <param name="northWest">The north-west point of the geographic region.</param>
            <param name="southEast">The south-east point of the geographic region.</param>
            <returns>The window zoom.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.GetGeographicFromZoom(System.Windows.Rect)">
            <summary>
            Given a WindowRect and the current plot area, get the geographic region represented by that WindowRect.
            </summary>
            <param name="windowRect">The zoom area.</param>
            <returns>The geographic area.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.GetGeographicPoint(System.Windows.Point)">
            <summary>
            Convert a window coordinate to a geographic coordinate.
            </summary>
            <param name="windowCoordinate">A window coordinate</param>
            <returns>The corresponding geographic coordinate</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.GetWindowPoint(System.Windows.Point)">
            <summary>
            Convert a geographic coordinate to a window coordinate.
            </summary>
            <param name="geographicCoordinate">A geographic coordinate</param>
            <returns>The corresponding window coordinate</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.ClearTileCache">
            <summary>
            Removes all cached tile Imagery from the 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.GetMarkerBrushByIndex(System.Int32)">
            <summary>
            Gets the appropriate marker fill brush for a series with the given index.
            </summary>
            <param name="index">The index of the series to return a marker fill brush for.</param>
            <returns>The appropriate marker fill brush for a series with the given index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.GetMarkerOutlineByIndex(System.Int32)">
            <summary>
            Gets the appropriate marker outline brush for a series with the given index.
            </summary>
            <param name="index">The index of the series to return a marker outline brush for.</param>
            <returns>The appropriate marker outline brush for a series with the given index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.OnApplyTemplate">
            <summary>
            Method invoked whenever application code or internal processes call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.UseFixedAspectZoom">
            <summary>
            Boolean method indicating whether or not this SeriesViewer should be zoomed only with a fixed aspect ratio.
            </summary>
            <returns>True.</returns>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamGeographicMap._geographicTopLeftPeg">
            <summary>
            The geographic coordinates of the top-left of the effective viewport, for internal reference.
            </summary>
            <remarks>
            This point should be updated whenever the window rect is set explicitly.  When the plot area changes, this peg should be used to adjust the translation of the actual window rect, ensuring that the geographic top-left of the map remains fixed.  This prevents apparent wiggling or sliding of the map window as the browser size changes.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.UpdateGeographicPeg">
            <summary>
            Updates the position of the top-left "peg" used for correct panning and zooming of the XamGeographicMap.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.SlideActualWindowRectToGeographicPeg">
            <summary>
            Makes corrections to the ActualWindowRect to ensure correct panning of the XamGeographicMap.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamGeographicMap._scaleTilesetRect">
            <summary>
            The rect, in window scale coordinates, that is spanned by the full tileset
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.CalculateActualWindowRect">
            <summary>
            Called to calculate the actual window rectangle.
            </summary>
            <returns>The value which should be assigned to the ActualWindowRect property, based on a calculation on the WindowRect property.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.ComputeEffectiveViewport(System.Windows.Rect)">
            <summary>
            Method used to calculate the effective viewport bounds.
            </summary>
            <param name="viewportRect">The actual viewport bounds.</param>
            <returns>The effective viewport bounds.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.CreateView">
            <summary>
            Creates and returns the view associated with this XamGeographicMap.
            </summary>
            <returns>The view object to be associated with this XamGeographicMap.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.GetBrushByIndex(System.Int32)">
            <summary>
            Gets the appropriate fill brush for a series with the given index.
            </summary>
            <param name="index">The index of the series to return a fill brush for.</param>
            <returns>The appropriate fill brush for a series with the given index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.GetOutlineByIndex(System.Int32)">
            <summary>
            Gets the appropriate outline brush for a series with the given index.
            </summary>
            <param name="index">The index of the series to return an outline brush for.</param>
            <returns>The appropriate outline brush for a series with the given index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.OnViewCreated(Infragistics.Controls.SeriesViewerView)">
            <summary>
            Method invoked when the view object is created.
            </summary>
            <param name="view">The view which has been created.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.ProcessPlotAreaSizeChanged(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Called so that the viewer can reconcile a plot area size change.
            </summary>
            <param name="oldGridAreaRect">The old size of the plot area.</param>
            <param name="newGridAreaRect">The new size of the plot area.</param>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamGeographicMap.WindowScaleProperty">
            <summary>
            Identifies the WindowScale dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.GetActualWindowScaleHorizontal">
            <summary>
            Gets actual window scale for horizontal dimension of the control 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.GetActualWindowScaleVertical">
            <summary>
            Gets actual window scale for vertical dimension of the control 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Method called whenever a property value on the XamGeographicMap is updated.
            </summary>
            <param name="sender">The source of the property change.</param>
            <param name="propertyName">The name of the property which has been updated.</param>
            <param name="oldValue">The previous value of the property which has been updated.</param>
            <param name="newValue">The new value of the property which has been updated.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.Register(System.Windows.DependencyObject,System.Action{System.Boolean})">
            <summary>
            Registers the given DependencyObject as background content.
            </summary>
            <param name="source">The DependencyObject to register as background content.</param>
            <param name="handler">An action to take whenever the background content is being refreshed.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.UnRegister(System.Windows.DependencyObject)">
            <summary>
            Unregisters the given DependencyObject as background content.
            </summary>
            <param name="source">The DependencyObject to unregister as background content.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.DeferredRefresh">
            <summary>
            Calls for a deferred refresh to the GeographicMap's background.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.ExportVisualData">
            <summary>
            Returns the chart visuals expressed as a ChartVisualData object.
            </summary>
            <returns>A ChartVisualData object representing the current chart visuals.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMap.ZoomToGeographic(System.Windows.Rect)">
            <summary>
            Zoom in to the geographic region specified, when possible (may need to wait for map to be initialized).
            </summary>
            <param name="geographic">The geographic region to zoom to.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamGeographicMap.Zoomable">
            <summary>
            Gets or sets zoomability of the current control
            <para> This is a dependency property. </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamGeographicMap.WorldRect">
            <summary>
            Gets or sets the world bounding rectangle.
            </summary>        
        </member>
        <member name="P:Infragistics.Controls.Maps.XamGeographicMap.ActualWorldRect">
            <summary>
            Gets the actual value of the WorldRect.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamGeographicMap.BackgroundContent">
            <summary>
            A UIElement to display behind all series, inside the viewport of the XamGeographicMap control.
            </summary>        
        </member>
        <member name="P:Infragistics.Controls.Maps.XamGeographicMap.XAxis">
            <summary>
            The X-axis for this XamGeographicMap.
            </summary>
            <remarks>Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.</remarks>        
        </member>
        <member name="P:Infragistics.Controls.Maps.XamGeographicMap.YAxis">
            <summary>
            The Y-axis for this XamGeographicMap.
            </summary>
            <remarks>Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.</remarks>        
        </member>
        <member name="P:Infragistics.Controls.Maps.XamGeographicMap.WindowScale">
            <summary>
            A number between 0 and 1 determining the scale of the horizontal/vertical zoom.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Width/Height of the WindowRect property.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamGeographicMap.ActualWindowScale">
            <summary>
            A number between 0 and 1 determining the scale of the horizontal/vertical zoom.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Width/Height of the ActualWindowRect property.
            </remarks>
        </member>
        <member name="E:Infragistics.Controls.Maps.XamGeographicMap.ImageTilesReady">
            <summary>
            This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamGeographicMap.PendingZoomChange">
            <summary>
            The pending desired geographic region to show.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.XamGeographicMapView">
            <summary>
            View class associated with the XamGeographicMap control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMapView.#ctor(Infragistics.Controls.Maps.XamGeographicMap)">
            <summary>
            XamGeographicMapView constructor.
            </summary>
            <param name="model">The XamGeographicMap control associated with this view.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMapView.OnTemplateProvided">
            <summary>
            Called when the template is provided.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMapView.ZoombarsSupported">
            <summary>
            Boolean indicating whether or not zoombars are supported by this the current control.
            </summary>
            <returns>False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMapView.GetMarkerBrushByIndex(System.Int32)">
            <summary>
            Gets a Marker Fill Brush based on the index of a series.
            </summary>
            <param name="index">The index of the series to get a Marker Fill Brush for.</param>
            <returns>The Brush to use as a Fill for Markers in a series with the given index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMapView.GetMarkerOutlineByIndex(System.Int32)">
            <summary>
            Gets a Marker Outline Brush based on the index of a series.
            </summary>
            <param name="index">The index of the series to get a Marker Outline Brush for.</param>
            <returns>The Brush to use as an Outline for Markers in a series with the given index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMapView.GetBrushByIndex(System.Int32)">
            <summary>
            Gets a Fill Brush based on the index of a series.
            </summary>
            <param name="index">The index of the series to get a Fill Brush for.</param>
            <returns>The Brush to use as a Fill for a series with the given index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMapView.GetOutlineByIndex(System.Int32)">
            <summary>
            Gets an Outline Brush based on the index of a series.
            </summary>
            <param name="index">The index of the series to get an Outline Brush for.</param>
            <returns>The Brush to use as an Outline for a series with the given index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamGeographicMapView.GetViewport">
            <summary>
            Gets the bounds of the map viewport.
            </summary>
            <returns>The bounds of the map viewport.</returns>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamGeographicMapView.MapModel">
            <summary>
            A reference to the XamGeographicMap control associated with this view.
            </summary>
        </member>
    </members>
</doc>
